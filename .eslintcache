[{"D:\\React Course\\section-16-forms\\src\\index.js":"1","D:\\React Course\\section-16-forms\\src\\App.js":"2","D:\\React Course\\section-16-forms\\src\\components\\SimpleInput.js":"3","D:\\React Course\\section-16-forms\\src\\hooks\\use-input.js":"4","D:\\React Course\\section-16-forms\\src\\components\\BasicForm.js":"5"},{"size":179,"mtime":1658975503351,"results":"6","hashOfConfig":"7"},{"size":214,"mtime":1661408163805,"results":"8","hashOfConfig":"7"},{"size":2348,"mtime":1659514332032,"results":"9","hashOfConfig":"7"},{"size":722,"mtime":1659513749372,"results":"10","hashOfConfig":"7"},{"size":2934,"mtime":1661408339089,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"13aotwh",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Course\\section-16-forms\\src\\index.js",[],["24","25"],"D:\\React Course\\section-16-forms\\src\\App.js",["26"],"D:\\React Course\\section-16-forms\\src\\components\\SimpleInput.js",["27","28","29"],"import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  // For Name\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n\n// For Email\n  let regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(value => regex.test(value));\n\n \n  //Validate whole form\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    //nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your E-Mail</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","D:\\React Course\\section-16-forms\\src\\hooks\\use-input.js",[],"D:\\React Course\\section-16-forms\\src\\components\\BasicForm.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":19},{"ruleId":"34","severity":1,"message":"38","line":1,"column":10,"nodeType":"36","messageId":"37","endLine":1,"endColumn":18},{"ruleId":"39","severity":1,"message":"40","line":17,"column":22,"nodeType":"41","messageId":"42","endLine":17,"endColumn":23,"suggestions":"43"},{"ruleId":"39","severity":1,"message":"40","line":17,"column":38,"nodeType":"41","messageId":"42","endLine":17,"endColumn":39,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["47","48"],["49","50"],"no-global-assign","no-unsafe-negation",{"messageId":"51","fix":"52","desc":"53"},{"messageId":"54","fix":"55","desc":"56"},{"messageId":"51","fix":"57","desc":"53"},{"messageId":"54","fix":"58","desc":"56"},"removeEscape",{"range":"59","text":"60"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"61","text":"62"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"63","text":"60"},{"range":"64","text":"62"},[419,420],"",[419,419],"\\",[435,436],[435,435]]